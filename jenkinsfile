pipeline {
    agent any // You can specify a specific agent if needed

    stages {
        stage('Build') {
            steps {
                // Checkout your source code from a Git repository
                git(url: 'https://github.com/Skengboi66/CUPS', branch: 'main')

                // Build your application (Replace with actual build commands)
                sh 'echo "building application"'
            }
        }

        stage('Deploy') {
            when {
                // Deploy only if the Build stage succeeded
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                // Define your EC2 instance details
                def ec2Host = '3.92.128.191' // Replace with your EC2 instance's public IP or hostname
                def ec2User = 'ubuntu' // Replace with your EC2 instance's SSH username
                def ec2Key = '/path/to/your/private/key.pem' // Replace with the path to your SSH private key

                // Define your application directory and deployment commands
                def appDirectory = '/home/ubuntu/web_app' // Replace with your application directory on the EC2 instance

                // Use rsync to copy files from the Jenkins workspace to the EC2 instance
                sh """
                    rsync -e "ssh -i ${ec2Key}" -avz --delete \
                    --exclude '.git/' --exclude 'node_modules/' \
                    ./ ${ec2User}@${ec2Host}:${appDirectory}/
                """
                
                // Optional: Restart your application or perform other deployment tasks here
            }
        }

    }

    post {
        success {
            // This block will be executed if the pipeline succeeds
            echo 'Pipeline succeeded!'

            // You can add post-success actions here
        }
        failure {
            // This block will be executed if the pipeline fails
            echo 'Pipeline failed!'

            // You can add post-failure actions here
        }
    }
}
